plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.vaadin' version '23.1.3'
    id 'java'
    id 'checkstyle'
    id 'com.google.cloud.tools.jib' version '3.2.1'
}

defaultTasks("clean", "build")

group = 'com.github.ProfSchmergmann'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven { setUrl("https://maven.vaadin.com/vaadin-addons") }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('vaadinVersion', "23.1.2")
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.springframework.boot:spring-boot-devtools'

    // Vaadin
    implementation 'com.vaadin:vaadin-spring-boot-starter'

    // SQLite
    implementation 'org.xerial:sqlite-jdbc'

    // Checkstyle
    implementation 'com.puppycrawl.tools:checkstyle:10.3.2'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Testing (JUnit)
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    implementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

vaadin {
    nodeAutoUpdate = true
    nodeVersion = 'v18.3.0'
    optimizeBundle = true
    pnpmEnable = true
    productionMode = false
    runNpmInstall = true
}

checkstyle {
    toolVersion '10.3.1'
    configFile file ("config/checkstyle/checkstyle.xml")
    ignoreFailures = true
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.github.ProfSchmergmann.TournamentWebApplication.TournamentWebApplication'
        )
    }
}

tasks.named("bootJar") {
    archiveBaseName.set('TournamentWebApplication')
    archiveClassifier.set('BETA_')
    archiveVersion.set('0.1')
}

jib {
    from {
        image = 'amazoncoretto:17.0.4'
    }
    to {
//        image = 'localhost:5000/my-image/built-with-jib'
        image = 'my-image/built-with-jib'
//        credHelper = 'osxkeychain'
        tags = ['tag2', 'latest']
    }
    container {
        mainClass = 'com.github.ProfSchmergmann.TournamentWebApplication.TournamentWebApplication'
        ports = ['1000']
        labels = [version:'BETA_0.1']
        format = 'OCI'
    }
}
